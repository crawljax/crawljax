package com.crawljax.core.state.duplicatedetection;

/**
 * Data-object generated by a NearDuplicateDetection-algorithm. This type of object is responsible
 * for containing the hashes generated by such algorithms and comparing the distance between these
 * hashes with other fingerprints.
 */
public interface Fingerprint {

	/**
	 * Checks whether this and that fingerprints are near-duplicates.
	 * 
	 * @param other
	 *            The other fingerprint to check this with.
	 * @return true if near-duplicate, else return false
	 */
	boolean isNearDuplicate(Fingerprint other);

	/**
	 * Checks whether this and that fingerprints are near-duplicates, using a custom threshold
	 * instead of the default-threshold in this.
	 * 
	 * @param other
	 *            The other fingerprint to check this with.
	 * @param threshold
	 *            The custom threshold to be used.
	 * @return true if near-duplicate, else return false
	 */
	boolean isNearDuplicate(Fingerprint other, double threshold);

	/**
	 * An extension of isNearDuplicateHash, which also shows the distance between two fingerprints.
	 * 
	 * @param other
	 *            The other fingerprint to check this with.
	 * @return the distance (i.e. # of different bit positions) between the hashes
	 */
	double getDistance(Fingerprint other);

	/**
	 * @return The upper limit of valid thresholds
	 */
	double getThresholdUpperlimit();

	/**
	 * @return The lower limit of valid thresholds
	 */
	double getThresholdLowerlimit();

	/**
	 * @return the threshold used in case when no custom threshold is set (ie isNearDuplicate/1)
	 */
	double getDefaultThreshold();
}
